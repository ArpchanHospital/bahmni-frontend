name: bahmni-frontend deploy
# Only trigger, when the build workflow succeeded
on:
  workflow_run:
    workflows: ["bahmni-frontend Build"]
    types:
      - completed
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: extract private key
        run: 'echo "$SSH_KEY" > bahmni-next.pem'
        shell: bash
        env:
          SSH_KEY: ${{secrets.BAHMNI_NEXT_PEM}}
      - run: |
          curl -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/Bahmni/bahmni-frontend/actions/artifacts
    # 1) ssh into EC2 machine
    # 2) extract download artifact URL using github api (uploaded artifact in build step). Use jq to query for archive_download_url
    # 3) extract physical location of the artifact (archive_download_url) - note this require GHA context OR user auth (PAT) - since we are sshing on remote we could only use PAT
    # 4) remove trailing carriage return and extract https location from header from 302 redirect - pass it to curl to download dist as zip
    # 5) unzip with force overwrite to dist folder
      - name: deploy bahmni-mf distribution
        run: |
          sudo ssh -T -o "StrictHostKeyChecking no" -i "bahmni-next.pem" ec2-user@ec2-54-251-102-238.ap-southeast-1.compute.amazonaws.com <<EOF
            sudo su
            cd /home/bahmni/bahmni-frontend
            curl -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/Bahmni/bahmni-frontend/actions/artifacts > artifacts.dat
            cat artifacts.dat | jq -r '.artifacts | .[] | select(.name | contains("dist-${{ github.sha }}")) | .archive_download_url' > archive_download_url.dat
            cat archive_download_url.dat | xargs curl --head -H "Authorization: token ${{secrets.BAHMNI_PAT}}" | \
            grep location | cut -d ' ' -f 2 > location.dat
            sed 's/\r$//' location.dat | xargs curl -o dist.zip
            unzip -o dist.zip -d dist
            rm artifact_url.dat
            rm dist.zip
          EOF